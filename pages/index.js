import { ApolloClient, gql, InMemoryCache } from '@apollo/client';
import Playlist from '@components/Playlist';
import Head from 'next/head';


export default function Home({playlist}) {

  return (
    <div>
      <Head>
        <title>Spotify Playlist</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <h1 className="text-center mt-12 text-2xl font-semibold">
          Spotify Playlist
        </h1>
        <div className="grid grid-cols-4 mx-auto gap-y-6 gap-x-6 my-12 w-2/3">
          {playlist?.items.map((item) => (
            <Playlist key={item.id} item={item} />
          ))}
        </div>
      </main>
    </div>
  );
}


export async function getServerSideProps() {
  const client = new ApolloClient({
    uri: 'http://localhost:3000/api/graphql/',
    cache: new InMemoryCache(),
  });
  const { data } = await client.query({
    query: gql`
      query {
        getUserPlaylist {
          items {
            id,
            external_urls {
              spotify
            },
            name
            images {
              url
            }
          }
        }
      }
    `,
  });

  return {
    props: {
     playlist: data.getUserPlaylist,
    },
  };
}